---

# There are community modules to manage AWS RDS but I haven't tested them

- name: debug
  debug: msg={{ vpc_subnets | map(attribute='subnet.id') }}

- name: Create a DB subnet group
  shell: |
    aws rds create-db-subnet-group \
    --db-subnet-group-name {{ app_name }}_db_subnet_group \
    --db-subnet-group-description "DB subnet group for ToDo App database" \
    --subnet-ids {{ vpc_subnets | map(attribute='subnet.id') | join(" ") }} \
    --region {{ aws_region }}
  register: db_subnet_group

- name: debug
  debug: msg={{ db_subnet_group }}

- name: Generate a password for the RDS instance
  set_fact:
    psql_pass: "Y8Y2wS2sSL"  # TO DO: generate password and pass it in to conf.toml using jinja2 templates

- name: Create PostgreSQL RDS instance
  shell: |
    aws rds create-db-instance \
    --db-instance-identifier {{ app_name }}-db \
    --db-instance-class db.t2.micro \
    --engine postgres \
    --vpc-security-group-ids {{ dbserver_sg.group_id }} \
    --master-username todoadm \
    --master-user-password {{ psql_pass }} \
    --allocated-storage 20 \
    --region {{ aws_region }} \
    --db-subnet-group-name {{ app_name }}_db_subnet_group \
    --multi-az
  register: rds

- name: debug
  debug: msg={{ rds }}